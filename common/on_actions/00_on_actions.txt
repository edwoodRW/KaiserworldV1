on_actions = {
	# country 
	on_new_term_election = {
		random_events = {
			100 = usa.2
		}
		random_events = {
			100 = election.1
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		effect = {
		
		}
	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		effect = {
		
		}
	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		effect = {
		
		}
	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		effect = {
		
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		effect = {
		
		}
	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {
	}

	on_wargoal_expire = {
		effect = {
		}
	}

	on_nuke_drop = {
		effect = {
		}
	}

	# country random events
	#on_bi_yearly_pulse = {
	#
	#}

	#on_five_year_pulse = {
	#
	#}

	on_border_war_lost = {
		effect = {
		
		}
	}
	
	on_leave_faction = {
		effect = {
		
		}
	}

	#FROM is the one that joins the faction
	on_create_faction = {
		effect = {
			news_event = news.13
		}
	}

	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
			FROM = { news_event = news.14 }
		}
	}

	#FROM is faction leader on join faction requests.
	on_join_faction = {
		effect = {
			#news_event = news.14
		}
	}

	#FROM is war target
	on_declare_war = {
		effect = {
		
		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
			news_event = { id = news.13 }
		}
	}
	
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			news_event = { id = country_capitulated.0 days = 0 }
			if = {
				limit = {
					OR = { FROM = { original_tag = MEX } FROM = { original_tag = TEX } }
					OR = { ROOT = { original_tag = MEX } ROOT = { original_tag = TEX } }
					has_global_flag = texan_uprising
				}
				clr_global_flag = texan_uprising
				set_global_flag = texan_uprising_concluded
			}
		}
	}

	# ROOT is previously capitualted country
	on_uncapitulation = {
		effect = {
		}
	}

	on_government_change = {
		effect = {
		
		}
	}

	on_coup_succeeded = {
		effect = {
		}
	}

	#ROOT is winner #FROM gets annexed - This will also fire on_annex
	on_civil_war_end = {
		effect = {
		
		}
	}

	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			
		}
	}

	#Not run on a specific country.
	on_startup = {
		effect = {
			#Startup Events
			AUS = { country_event = austria.1 }
			BAV = { country_event = bavaria.1 }
			BRA = { country_event = brazil.1 }
			CAL = { country_event = california.1 }
			CAN = { country_event = quebec.1 }
			CHI = { country_event = china.1 }
			ENG = { country_event = britain.1 }
			FIN = { country_event = finland.1 }
			FRA = { country_event = france.1 }
			GRE = { country_event = greece.1 }
			GUA = { country_event = guatemala.1 }
			HAN = { country_event = hannover.1 }
			HES = { country_event = hesse.1 }
			HOL = { country_event = netherlands.1 }
			HYD = { country_event = hyderabad.1 }
			ITA = { country_event = italy.1 }
			JAP = { country_event = japan.1 }
			MEX = { country_event = mexico.1 }
			MNT = { country_event = montenegro.1 }
			NAP = { country_event = naples.1 }
			NAT = { country_event = native_confederation.1 }
			OHI = { country_event = ohio.1 }
			PAP = { country_event = papal_state.1 }
			POL = { country_event = poland.1 }
			PRS = { country_event = prussia.1 }
			ROM = { country_event = romania.1 }
			SER = { country_event = serbia.1 }
			SOV = { country_event = russia.1 }
			SPR = { country_event = spain.1 }
			SWE = { country_event = sweden.1 }
			SWI = { country_event = switzerland.1 }
			THU = { country_event = thuringia.1 }
			TUR = { country_event = turkey.1 }
			USA = { country_event = usa.1 }
			WES = { country_event = westphalia.1 }
			WUR = { country_event = wurttemberg.1 }
			YUN = { country_event = yunnan.1 }
		}
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {

		}
	}
}
